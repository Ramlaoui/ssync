#!/usr/bin/env python
"""Submit a test job with watchers."""

import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent / "src"))

from ssync import config
from ssync.cache import get_cache
from ssync.manager import SlurmManager
from ssync.utils.slurm_params import SlurmParams

# Load config and get hosts
cfg = config.load_config()
slurm_hosts = cfg  # cfg is already the list of hosts

# Initialize manager
manager = SlurmManager(slurm_hosts)

# Submit job
params = SlurmParams(
    job_name="test-watcher-py", time_min=5, mem_gb=1, partition="debug"
)

job = manager.submit_script(
    slurm_host="entalpic",
    params=params,
    local_script_path="test_watchers_actions.sh",
    enable_watchers=True,
)

if job:
    print(f"✅ Submitted job {job.job_id}")

    # Check if watchers were created
    cache = get_cache()
    with cache._get_connection() as conn:
        cursor = conn.execute(
            "SELECT COUNT(*) FROM job_watchers WHERE job_id = ?", (job.job_id,)
        )
        count = cursor.fetchone()[0]
        print(f"📊 Created {count} watchers for job {job.job_id}")

        if count > 0:
            cursor = conn.execute(
                "SELECT pattern, state FROM job_watchers WHERE job_id = ?",
                (job.job_id,),
            )
            print("👁️  Watchers:")
            for row in cursor:
                print(f"  - Pattern: {row[0]}, State: {row[1]}")
else:
    print("❌ Failed to submit job")
