#!/usr/bin/env python
"""Test manual trigger functionality"""

import json
import sys
from pathlib import Path

import requests

# Add src to path
sys.path.insert(0, str(Path(__file__).parent / "src"))


def test_manual_trigger():
    """Test the manual trigger endpoint"""

    base_url = "https://localhost:8042"

    # Test watcher ID 113 (from the logs)
    watcher_id = 113

    # Test without test text (should use cached output)
    print(f"Testing manual trigger for watcher {watcher_id}...")

    try:
        response = requests.post(
            f"{base_url}/api/watchers/{watcher_id}/trigger",
            verify=False,  # Skip SSL verification for localhost
            timeout=30,
        )

        print(f"Response status: {response.status_code}")
        print(f"Response headers: {dict(response.headers)}")

        if response.status_code == 200:
            data = response.json()
            print("SUCCESS!")
            print(f"Response data: {json.dumps(data, indent=2)}")
        else:
            print("FAILED!")
            print(f"Error response: {response.text}")

    except requests.exceptions.SSLError as e:
        print(f"SSL Error (expected for self-signed cert): {e}")
    except Exception as e:
        print(f"Error: {e}")

    # Test with sample test text
    print("\nTesting with sample text...")

    try:
        response = requests.post(
            f"{base_url}/api/watchers/{watcher_id}/trigger",
            data="HYDRA_OUTPUT_DIR=/test/output/path\nStarting training\nError rate: 5%",
            headers={"Content-Type": "text/plain"},
            verify=False,
            timeout=30,
        )

        print(f"Response status: {response.status_code}")

        if response.status_code == 200:
            data = response.json()
            print("SUCCESS!")
            print(f"Response data: {json.dumps(data, indent=2)}")
        else:
            print("FAILED!")
            print(f"Error response: {response.text}")

    except Exception as e:
        print(f"Error: {e}")


if __name__ == "__main__":
    test_manual_trigger()
